{"version":3,"file":"static/js/533.a2aad774.chunk.js","mappings":"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","sources":["pages/Cart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst Cart = () => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCartItems = async () => {\r\n      try {\r\n        const email = localStorage.getItem('userEmail');\r\n        if (!email) {\r\n          throw new Error(\"User email not found in localStorage\");\r\n        }\r\n\r\n        const response = await fetch(`https://ecart-wybs.onrender.com/cart/getItems?email=${email}`);\r\n        const data = await response.json();\r\n\r\n        if (!Array.isArray(data)) {\r\n          throw new Error(\"Fetched cart data is not an array\");\r\n        }\r\n\r\n        // Assign random discount percentages between 10% and 40% to each item\r\n        const itemsWithDiscounts = data.map(item => ({\r\n          ...item,\r\n          discountPercent: Math.floor(Math.random() * 31) + 10 // Generates random discount between 10% and 40%\r\n        }));\r\n\r\n        setCartItems(itemsWithDiscounts);\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching cart items:', error);\r\n        setError(error.message);\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCartItems();\r\n  }, []);\r\n\r\n   const addItem = async (product) => {\r\n    try {\r\n      const email = localStorage.getItem('userEmail');\r\n      const { productId, image, title, price } = product;\r\n\r\n      const response = await fetch(`https://ecart-wybs.onrender.com/cart/addItem`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, productId, image, title, price, quantity: 1 }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to add item\");\r\n      }\r\n\r\n      setCartItems((prevItems) =>\r\n        prevItems.map((item) =>\r\n          item.productId === productId\r\n            ? { ...item, quantity: item.quantity + 1 }\r\n            : item\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Error adding item:', error);\r\n    }\r\n  };\r\n\r\n  const deleteItem = async (productTitle) => {\r\n    try {\r\n      const email = localStorage.getItem('userEmail');\r\n      const response = await fetch(`https://ecart-wybs.onrender.com/cart/deleteItem`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, productTitle }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to delete item\");\r\n      }\r\n\r\n      setCartItems((prevItems) =>\r\n        prevItems.map((item) =>\r\n          item.title === productTitle\r\n            ? { ...item, quantity: item.quantity - 1 }\r\n            : item\r\n        ).filter(item => item.quantity > 0)\r\n      );\r\n    } catch (error) {\r\n      console.error('Error removing item:', error);\r\n    }\r\n  };\r\n\r\n  const removeItems = async (productTitle) => {\r\n    try {\r\n      const email = localStorage.getItem('userEmail');\r\n      const response = await fetch(`https://ecart-wybs.onrender.com/cart/deleteItems`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, productTitle }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to delete item\");\r\n      }\r\n\r\n      setCartItems((prevItems) =>\r\n        prevItems.filter((item) => item.title !== productTitle)\r\n      );\r\n    } catch (error) {\r\n      console.error('Error removing item:', error);\r\n    }\r\n  };\r\n\r\n  const clearCart = async () => {\r\n    try {\r\n      const email = localStorage.getItem('userEmail');\r\n      const response = await fetch(`https://ecart-wybs.onrender.com/cart/emptyCart`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to clear the cart\");\r\n      }\r\n\r\n      setCartItems([]);\r\n    } catch (error) {\r\n      console.error('Error clearing cart:', error);\r\n    }\r\n  };\r\n\r\n\r\n  // Function to calculate the discount amount in monetary value\r\n  const calculateDiscountAmount = (price, discountPercent) => {\r\n    return (price * discountPercent) / 100;\r\n  };\r\n\r\n  // Function to calculate the subtotal of all items in the cart before applying discounts\r\n  const calculateSubtotal = () => {\r\n    return cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0);\r\n  };\r\n\r\n  // Function to calculate the total discount across all items in the cart\r\n  const calculateTotalDiscount = () => {\r\n    return cartItems.reduce(\r\n      (acc, item) => acc + calculateDiscountAmount(item.price, item.discountPercent) * item.quantity,\r\n      0\r\n    );\r\n  };\r\n\r\n  // Function to calculate the total price after applying discounts\r\n  const calculateTotalPrice = () => {\r\n    const subtotal = calculateSubtotal();\r\n    const totalDiscount = calculateTotalDiscount();\r\n    return subtotal - totalDiscount;\r\n  };\r\n\r\n  \r\n\r\n  if (isLoading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      {cartItems.length === 0 ? (\r\n        <h2 className=\"text-xl font-semibold\">Cart is empty</h2>\r\n      ) : (\r\n        <div>\r\n          <h2 className=\"text-xl font-semibold\">Your items are:</h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\">\r\n            {cartItems.map((item) => (\r\n              <div key={item.productId} className=\"border rounded-lg p-4 shadow-md\">\r\n                <img src={item.image} alt={item.title} className=\"w-full h-48 object-cover mb-2\" />\r\n                <h3 className=\"text-lg font-medium mb-2\">{item.title}</h3>\r\n                <p className=\"text-gray-700\">Price: ${item.price.toFixed(2)}</p>\r\n                <p className=\"text-green-600\">\r\n                  Discount: {item.discountPercent}% (${calculateDiscountAmount(item.price, item.discountPercent).toFixed(2)})\r\n                </p>\r\n                <div className=\"flex items-center mt-2\">\r\n                  <button\r\n                    className=\"bg-gray-200 text-gray-700 px-2 py-1 rounded hover:bg-gray-300\"\r\n                    onClick={() => deleteItem(item.title)}\r\n                  >\r\n                    -\r\n                  </button>\r\n                  <span className=\"mx-2\">{item.quantity}</span>\r\n                  <button\r\n                    className=\"bg-gray-200 text-gray-700 px-2 py-1 rounded hover:bg-gray-300\"\r\n                    onClick={() => addItem(item)}\r\n                  >\r\n                    +\r\n                  </button>\r\n                </div>\r\n                <button\r\n                  className=\"bg-red-500 text-white px-4 py-2 mt-2 rounded hover:bg-red-700\"\r\n                  onClick={() => removeItems(item.title)}\r\n                >\r\n                  Remove All\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"mt-8 border-t pt-4\">\r\n            <h3 className=\"text-xl font-semibold\">Cart Summary</h3>\r\n            <p className=\"text-gray-700 mt-2\">Subtotal: ${calculateSubtotal().toFixed(2)}</p>\r\n            <p className=\"text-gray-700 mt-2\">Total Discount: ${calculateTotalDiscount().toFixed(2)}</p>\r\n            <p className=\"text-gray-700 mt-2 font-semibold\">\r\n              Total: ${calculateTotalPrice().toFixed(2)}\r\n            </p>\r\n            <button\r\n              className=\"bg-blue-500 text-white px-4 py-2 mt-4 rounded hover:bg-blue-700\"\r\n              onClick={() => alert('Proceeding to checkout...')}\r\n            >\r\n              Checkout\r\n            </button>\r\n            <button\r\n              className=\"bg-red-600 text-white px-4 py-2 mt-4 ml-4 rounded hover:bg-red-800\"\r\n              onClick={clearCart}\r\n            >\r\n              Clear Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"names":["Cart","cartItems","setCartItems","useState","isLoading","setIsLoading","error","setError","useEffect","async","email","localStorage","getItem","Error","response","fetch","data","json","Array","isArray","itemsWithDiscounts","map","item","discountPercent","Math","floor","random","console","message","fetchCartItems","calculateDiscountAmount","price","calculateSubtotal","reduce","acc","quantity","calculateTotalDiscount","_jsx","children","_jsxs","className","length","src","image","alt","title","toFixed","onClick","method","headers","body","JSON","stringify","productTitle","ok","prevItems","filter","deleteItem","productId","product","addItem","removeItems","alert"],"sourceRoot":""}